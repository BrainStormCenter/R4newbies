<<<<<<< HEAD
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readxl) # This is used to import data from excel
library(tidyverse)
library(ez)
#library(Hmisc)
#library(reshape2)
library(here)
here() # THIS SETS THE WORKING DIRECTORY TO THE LOCATION OF THIS FILE
dr_here(show_reason = TRUE)
# where files are:
# setwd("/Users/meredithjohnson/Box Sync/My Stuff/MyStuffForPainLab/Questionnaire Pilot Data")
#setwd("/Users/jcraggs/Box Sync/Grants/Alcohol_Pain/PsychoPy_ASQ-Questionniares_Pilot_Data/")
setwd("/Users/jcraggs/Box Sync/Grants/Alcohol_Pain/ASQ_pilot/")
#Read Data
# Data exported from RedCap on April 4, 2019
#data=read.csv('ImagingPsychometrics_DATA_2019-04-04_1240.csv')
#data2=read.csv('ImagingPsychometrics_DATA_2019-04-04_1240.csv')
data=read.csv("ASQ_pilot_2019_04_09.csv", header = TRUE)
data2=read.csv("ASQ_pilot_2019_04_09.csv", header = TRUE)
#tbl_df(data2)
#View(data2)
# IN THIS DATA SET BOTH COMMANDS SORT THE DATA AND PRODUCE THE SAME RESULT
arrange(data2, Count)
#Read Data
# Data exported from RedCap on April 4, 2019
#data=read.csv('ImagingPsychometrics_DATA_2019-04-04_1240.csv')
#data2=read.csv('ImagingPsychometrics_DATA_2019-04-04_1240.csv')
data_ORIG=read.csv("ASQ_pilot_2019_04_09.csv", header = TRUE)
data2=read.csv("ASQ_pilot_2019_04_09.csv", header = TRUE)
#tbl_df(data2)
#View(data2)
#	CORRECTING AN ERROR IN THE MAX TEMP OF THREE SUBJECTS
#	CHANGING THE max.temp VALUE
data2[data2$participant_id == "IP005", "max.temp"] <- 50
data2[data2$participant_id == "IP168", "max.temp"] <- 50
data2[data2$participant_id == "IP183", "max.temp"] <- 48
#	CREATING TEMPORARY DATA SUBSET
tmp <- select(data2, participant_id, max.temp)
#	CHECKING THAT THE CHANGE WAS MADE CORRECTLY
filter(tmp, participant_id  == "IP005")
filter(tmp, participant_id  == "IP168")
filter(tmp, participant_id  == "IP183")
#	REMOVING THE TEMPORARY DATA SET
rm(tmp)
#	SAVING THE NEW DATA SET
save(data2, file = "ASQ_pilot.RData")
rm(data2)
#	LOADING THE NEW DATA SET
load(file = "ASQ_pilot.RData")
#	CREATE A SMALLER DATA SET
asq_sm <- select(data2,
participant_id)
View(asq_sm)
#	CREATE A SMALLER DATA SET
asq_sm <- select(data2,
participant_id,
starts_with("asq"),
starts_with("typical"),
max.temp
)
# View(asq_sm)
#	CREATE A SMALLER DATA SET
asq_sm <- select(data2,
participant_id,
starts_with("asq"),
starts_with("typical"),
max.temp
)
View(asq_sm)
#	COMPUTE ASQ-L VALUES
mutate(asq_sm,
asq.light = mean(asq_1a, asq_2a)
)
View(asq_sm)
#	COMPUTE ASQ-L VALUES
mutate(asq_sm,
asq.light = mean(asq_1a asq_2a)
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq.light = mean(asq_1a asq_2a) )
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq.light = mean(asq_1a asq_2a))
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq-l = mean(asq_1a asq_2a))
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq_l = mean(asq_1a asq_2a))
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq_l = (asq_1a asq_2a)/2	   )
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq_l = asq_1a asq_2a / 2	   )
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq_l = asq_1a + asq_2a
)
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq_l = (asq_1a + asq_2a)/2
)
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq_l = mean(asq_1a + asq_2a)
)
View(asq_sm)
#	CREATE A SMALLER DATA SET
asq_sm <- select(data2,
participant_id,
starts_with("asq"),
starts_with("typical"),
max.temp
)
rm(asq_sm)
#	CREATE A SMALLER DATA SET
asq_sm <- select(data2,
participant_id,
starts_with("asq"),
starts_with("typical"),
max.temp
)
#	COMPUTE ASQ-L VALUES
mutate(asq_sm, asq_l = mean(asq_1a + asq_2a)
)
asq_sm2 <-  mutate(asq_sm, asq_l = mean(asq_1a + asq_2a)
)
asq_sm <-  mutate(asq_sm, asq_l = mean(asq_1a + asq_2a)
)
=======
ggplot(data = SampleData, mapping = aes(x = Gp2, y = lh.area.frontal)) +
geom_boxplot()
ggplot(data = SampleData) +
stat_summary(
mapping = aes(x = Gp2, y = lh.area.frontal),
fun.ymin = min,
fun.ymax = max,
fun.y = mean,
show.legend = TRUE
)
stat_summary()
roi1 <- ggplot(SampleData, aes(Gp2, fill = Gp2))
roi1 + geom_bar()
roi1 + stat_summary_bin(aes(y = lh.area.frontal), fun.y = "mean", geom = "bar", show.legend = TRUE)
View(roi1)
View(roi1)
roi1[["data"]][["lh.area.frontal"]]
View(roi1)
roi1[["plot_env"]][["by_Gp2"]][["lh.area.frontal"]]
t.test(lh.area.frontal, Gp2)
t.test(lh.area.frontal~Gp2)
t.test(lh.area.frontal~Gp2, SampleData)
View(SampleData)
cor.test(SampleData$lh.area.frontal, SampleData$ICV)
Data <- data.frame(SampleData)
SampleData <- data.frame(SampleData)
DataMeans <- sapply(split(SampleData$lh.area.frontal, SampleData$Gp2), mean)
DataMeans
DataMeans <- sapply(split(SampleData$lh*, SampleData$Gp2), mean)
diamonds
mpg
mpg
data()
InsectSprays
CO2
tibbles
?tibbles
DataMeans <- sapply(split(SampleData, SampleData$Gp2), mean)
DataMeans
DataMeans <- sapply(split(SampleData$, SampleData$Gp2), mean)
SampleData
View(SampleData)
page(CO2, method = "print")
?page
page(page)
page("page")
DataMeans <- sapply(split(SampleData$lh.area.frontal, SampleData$Gp2), mean)
DataMeans
DataMeans <- sapply(split(SampleData SampleData$Gp2), mean)
list(Data$Group)
list(Data$Gp2)
DataMeans <- sapply(split(SampleData$lh.area.frontal SampleData$Gp2), mean)
DataMeans <- sapply(split(SampleData$lh.area.frontal, SampleData$Gp2), mean)
DataMeans
help(c)
x <- 1:4
letters[1:4]
names(x) <- letters[1:4]
x
names
list(Data$Gp2)
list(Data$Gp2, Data$Sex)
list(Data$Gp2, Data$Sex), mean()
list(Data$Gp2, Data$Sex, mean)
Data2 = data.frame(value = SampleData)
View(Data2)
DataMeans2 <- sapply(split(Data2$value, Data2$value.Gp2), meean)
DataMeans2 <- sapply(split(Data2$value, Data2$value.Gp2), mean)
DataMeans2 <- sapply(split(Data, Data$.Gp2), mean)
Data2 = data.frame(value = c(rnorm(10000),rnorm(10000,5), rnorm(10000,10)), groups = rep(c('a','b','d'), each = 10000), gender = rep(c('M','F'), each = 15000))
## the mean values for each group
View(Data2)
data.frame(x = list(1:3, 3:5))
data.frame(x = list(1:3))
data.frame(x = list(1:3, 3:5))
data.frame(x = list(1:3, 6:8))
data.frame(x = list(1:3, 3:5))
f = list(Data$Gp2, Data$Sex, mean)
View(f)
f
help("tibble")
help(by_group)
??by_group
help("group_by")
summarize(by_Gp2)
tribble()
tibble(
x = list(1:3, 3:5),
y = c("1, 2", "3, 4, 5")
)
tribble(
~x, ~y,
1:3, "1, 2",
3:5, "3, 4, 5"
)
country
gapminder
gapminder %>%
group_by(country, continent) %>%
nest()
library(modelr)
library(tidyverse)
gapminder %>%
group_by(country, continent) %>%
nest()
library(modelr)
library(tidyverse)
library(gapminder)
install.packages("gapminder")
library(modelr)
library(tidyverse)
library(gapminder)
gapminder %>%
group_by(country, continent) %>%
nest()
library(modelr)
library(tidyverse)
library(gapminder)
library(broom)
gapminder %>%
group_by(country, continent) %>%
nest()
library(broom)
library(modelr)
library(tidyverse)
library(gapminder)
gapminder %>%
group_by(country, continent) %>%
nest()
gapminder
t.test(Gp2, by_Gp2)
t.test(by_Gp2)
by_Gp2
t.test(lh.volume.frontal, by_Gp2)
Data
Data(1)
Data(1:1)
Data[1]
Data[3]
Data[3:4]
Data[5:7]
t.test(Data[6:7]~Gp2, Data)
t.test([6:7]~Gp2, Data)
list(Data)
help("t.test")
t.test(1:10, y = c(7:20))
plot(extra ~ group, data = sleep)
sleep
select(Data, contains("lh."))
t.test(lh.area.frontal~Gp2, SampleData)
t.test(lh.area.frontal, lh.volume.frontal~Gp2, SampleData)
t.test(lh.area.frontal lh.volume.frontal~Gp2, SampleData)
t.test(lh.area.frontal lh.volume.frontal, SampleData)
t.test(lh.area.frontal, lh.volume.frontal)
t.test(SampleData, lh.area.frontal, lh.volume.frontal)
with(SampleData, t.test(lh.area.frontal ~ Gp2))
with(SampleData, t.test( ~ Gp2))
t.test(lh.volume~Gp2, SampleData)
t.test(lh.volume.frontal~Gp2, SampleData)
t.test(lh.area.frontal~Gp2, SampleData)
t.test(lh.volume.frontal~Gp2, SampleData)
t.test(ICV~Gp2, SampleData)
t.test(lh.volume.occipital~Gp2, SampleData)
t.test(lh.volume.frontal ~Gp2, SampleData)
t.test(lh.area.frontal~Gp2, SampleData)
t.test(lh.volume.pericalcarine~Gp2, SampleData)
t.test(ICV~Gp2, SampleData)
t.test(lh.volume.occipital~Gp2, SampleData)
t.test(lh.volume.frontal ~Gp2, SampleData)
t.test(lh.area.frontal~Gp2, SampleData)
t.test(rh.volume.pericalcarine~Gp2, SampleData)
t.test(lh.volume.occipital.sum~Gp2, SampleData)
t.test(lh.volume.frontal.sum~Gp2, SampleData)
t.test(lh.area.frontal.sum~Gp2, SampleData)
t.test(rh.volume.pericalcarine.sum~Gp2, SampleData)
t.test(ICV~Gp2, SampleData) # N-Sig
t.test(lh.volume.occipital~Gp2, SampleData) 	# N-Sig
t.test(lh.volume.frontal ~Gp2, SampleData) 		# N-Sig
t.test(lh.area.frontal~Gp2, SampleData) 		# Sig
t.test(rh.volume.pericalcarine~Gp2, SampleData) # N-Sig
t.test(lh.volume.occipital.sum~Gp2, SampleData) # N-Sig
t.test(lh.volume.frontal.sum~Gp2, SampleData)	# N-Sig
t.test(lh.area.frontal.sum~Gp2, SampleData)		# Sig
t.test(rh.volume.pericalcarine.sum~Gp2, SampleData) # N-Sig
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut))
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = data) +
stat_summary(
mapping = aes(x = Gp2, y = lh.area.frontal),
fun.ymin = min,
fun.ymax = max,
fun.y = mean,
show.legend = TRUE
)
ggplot(data = Data) +
stat_summary(
mapping = aes(x = Gp2, y = lh.area.frontal),
fun.ymin = min,
fun.ymax = max,
fun.y = mean,
show.legend = TRUE
)
ggplot(data = Data) +
geom_point(mapping = aes(x = Gp2, y = lh.area.frontal))
ggplot(data = Data, mapping = aes(x = Gp2, y = lh.area.frontal)) +
geom_boxplot()
#	THE BOX PLOT SUGGESTS THERE MAY BE OUTLIER(S) IN GROUP-1
ggplot(data = Data) +
geom_point(mapping = aes(x = Gp2, y = lh.area.frontal))
ggplot(data = Data, mapping = aes(x = Gp2, y = lh.area.frontal)) +
geom_boxplot()
ggplot(data = Data, mapping = aes(x = Gp2, y = ICV)) +
geom_boxplot()
#	THE BOX PLOT SUGGESTS THERE MAY BE OUTLIER(S) IN GROUP-1
View(Data)
ggplot(data = Data) +
geom_point(mapping = aes(x = Gp2, y = lh.area.frontal))
ggplot(data = Data, mapping = aes(x = Gp2, y = ICV)) +
geom_boxplot()
ggplot(data = Data, mapping = aes(x = Gp2, y = lh.volume.occipital)) +
geom_boxplot()
ggplot(data = Data, mapping = aes(x = Gp2, y = lh.volume.frontal)) +
geom_boxplot()
ggplot(data = Data, mapping = aes(x = Gp2, y = lh.area.frontal)) +
geom_boxplot()
ggplot(data = Data, mapping = aes(x = Gp2, y = rh.volume.pericalcarine)) +
geom_boxplot()
#	THE BOX PLOT SUGGESTS THERE MAY BE OUTLIER(S) IN GROUP-1
t.test(ICV~Gp2, data) # N-Sig
t.test(ICV~Gp2, Data) # N-Sig
t.test(lh.volume.occipital~Gp2, Data) 	# N-Sig
t.test(lh.volume.frontal ~Gp2, Data) 		# N-Sig
t.test(lh.area.frontal~Gp2, Data) 		# Sig
t.test(rh.volume.pericalcarine~Gp2, Data) # N-Sig
t.test(lh.volume.occipital.sum~Gp2, Data) # N-Sig
t.test(lh.volume.frontal.sum~Gp2, Data)	# N-Sig
t.test(lh.area.frontal.sum~Gp2, Data)		# Sig
t.test(rh.volume.pericalcarine.sum~Gp2, Data) # N-Sig
install.packages("here")
knitr::opts_chunk$set(echo = TRUE)
library(readxl) # This is used to import data from excel
library(tidyverse)
library(here)
here()
dr_here(show_reason = TRUE)
# library(plyr)
# library(tidyr)
# library(doBy)
# library(ez)
# library(readr)
# library(ggplot2)
# library(dplyr)
# library(reshape2)
library(readxl) # This is used to import data from excel
library(tidyverse)
library(here)
here()
dr_here(show_reason = TRUE)
reprex()
reprex()
knitr::opts_chunk$set(echo = TRUE)
library(readxl) # THIS IS USED TO IMPORT DATA FROM EXCEL
library(tidyverse)
library(reprex)
library(here)	# USE THIS TO SET RELATIVE PATHS OR @JennyBryan WILL KILL ME
here()
dr_here(show_reason = FALSE)
SampleData <- read_excel("SampleData.xlsx")
#View(SampleData) # UNCOMMENT THIS LINE TO EXECUTE CODE
SampleData <- data.frame(SampleData)
SampleData$Gp2[SampleData$Group == 1] <- "Gp1"
SampleData$Gp2[SampleData$Group == 4] <- "Gp4"
t.test(ICV~Gp2, SampleData)
t.test(lh.volume.occipital~Gp2, SampleData)
t.test(lh.volume.frontal ~Gp2, SampleData)
t.test(lh.area.frontal~Gp2, SampleData)
t.test(rh.volume.pericalcarine~Gp2, SampleData)
t.test(lh.volume.occipital.sum~Gp2, SampleData)
t.test(lh.volume.frontal.sum~Gp2, SampleData)
t.test(lh.area.frontal.sum~Gp2, SampleData)
t.test(rh.volume.pericalcarine.sum~Gp2, SampleData)
knitr::opts_chunk$set(echo = TRUE)
library(readxl) # THIS IS USED TO IMPORT DATA FROM EXCEL
library(tidyverse)
library(reprex)
library(here)	# USE THIS TO SET RELATIVE PATHS OR @JennyBryan WILL KILL ME
# here()
# dr_here(show_reason = FALSE)
SampleData <- read_excel("SampleData.xlsx")
#View(SampleData) # UNCOMMENT THIS LINE TO EXECUTE CODE
SampleData <- data.frame(SampleData)
SampleData$Gp2[SampleData$Group == 1] <- "Gp1"
SampleData$Gp2[SampleData$Group == 4] <- "Gp4"
t.test(ICV~Gp2, SampleData)
t.test(lh.volume.occipital~Gp2, SampleData)
t.test(lh.volume.frontal ~Gp2, SampleData)
t.test(lh.area.frontal~Gp2, SampleData)
t.test(rh.volume.pericalcarine~Gp2, SampleData)
t.test(lh.volume.occipital.sum~Gp2, SampleData)
t.test(lh.volume.frontal.sum~Gp2, SampleData)
t.test(lh.area.frontal.sum~Gp2, SampleData)
t.test(rh.volume.pericalcarine.sum~Gp2, SampleData)
reprex:::reprex_addin()
mtcars
iris
mtcars
summarize_all(mtcars)
summarize_all(mtcars, mean)
summarize_all(mtcars, count())
count(mtcars)
dat <- mtcars
View(dat)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
cars_dat <- mtcars
t.test(mpg~am, cars_dat)
t.test(disp~am, cars_dat)
t.test(hp~am, cars_dat)
t.test(drat~am, cars_dat)
t.test(wt~am, cars_dat)
t.test(qsec~am, cars_dat)
library(tidyverse)
library(reprex)
reprex(..., si = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
reprex(..., si = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
reprex(si = TRUE)
cars_dat <- mtcars
t.test(mpg~am, cars_dat)
t.test(disp~am, cars_dat)
t.test(hp~am, cars_dat)
t.test(drat~am, cars_dat)
t.test(wt~am, cars_dat)
t.test(qsec~am, cars_dat)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
reprex(si = TRUE, style = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
reprex(si = TRUE, style = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
reprex(si = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
reprex(si = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
#reprex(si = TRUE)
cars_dat <- mtcars
t.test(mpg~am, cars_dat)
t.test(disp~am, cars_dat)
t.test(hp~am, cars_dat)
t.test(drat~am, cars_dat)
t.test(wt~am, cars_dat)
t.test(qsec~am, cars_dat)
reprex:::reprex_addin()
reprex:::reprex_addin()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
cars_dat <- mtcars
t.test(mpg~am, cars_dat)
t.test(disp~am, cars_dat)
t.test(hp~am, cars_dat)
t.test(drat~am, cars_dat)
t.test(wt~am, cars_dat)
t.test(qsec~am, cars_dat)
reprex:::reprex_addin()
reprex:::reprex_addin()
reprex:::reprex_addin()
reprex()
reprex()
source('~/Documents/git/Rstudio/R4newbies/reprex_ttest.R', echo=TRUE)
reprex:::reprex_addin()
reprex:::reprex_addin()
reprex:::reprex_addin()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
SampleData <- read_excel("SampleData.xlsx")
#View(SampleData) # UNCOMMENT THIS LINE TO EXECUTE CODE
SampleData <- data.frame(SampleData)
SampleData$Gp2[SampleData$Group == 1] <- "Gp1"
SampleData$Gp2[SampleData$Group == 4] <- "Gp4"
t.test(ICV~Gp2, SampleData) # N-Sig
t.test(lh.volume.occipital~Gp2, SampleData) 	# N-Sig
t.test(lh.volume.frontal ~Gp2, SampleData) 		# N-Sig
t.test(lh.area.frontal~Gp2, SampleData) 		# Sig
t.test(rh.volume.pericalcarine~Gp2, SampleData) # N-Sig
t.test(lh.volume.occipital.sum~Gp2, SampleData) # N-Sig
t.test(lh.volume.frontal.sum~Gp2, SampleData)	# N-Sig
t.test(lh.area.frontal.sum~Gp2, SampleData)		# Sig
t.test(rh.volume.pericalcarine.sum~Gp2, SampleData) # N-Sig
View(SampleData)
SampleData <- data.frame(SampleData)
SampleData <- data.frame(SampleData)
library(tidyverse)
library(readxl)
SampleData <- read_excel("SampleData.xlsx")
SampleData <- data.frame(SampleData)
#View(SampleData) # UNCOMMENT THIS LINE TO EXECUTE CODE
# All the t-tests, tidyverse style
t_tests_tidy <- map(
select(SampleData, -Group),
~ t.test(.x ~ Group, data = Sampleata)
# All the t-tests, tidyverse style
t_tests_tidy <- map(
select(SampleData, -Group),
~ t.test(.x ~ Group, data = SampleData)
library(tidyverse)
library(readxl)
SampleData <- read_excel("SampleData.xlsx")
SampleData <- data.frame(SampleData)
#View(SampleData) # UNCOMMENT THIS LINE TO EXECUTE CODE
# All the t-tests, tidyverse style
t_tests_tidy <- map(
select(SampleData, -Group),
~ t.test(.x ~ Group, data = SampleData)
reprex::reprex(input = "reprex_ttest.R", outfile = "reprex_ttest_v1.md")
install.packages(c("callr", "car", "cli", "data.table", "digest", "doBy", "fansi", "later", "lavaan", "lme4", "maptools", "pkgconfig", "pracma", "processx", "reprex", "rlang", "RNifti", "rockchalk", "scales", "semTools", "tinytex", "XML", "xtable"))
load("/Users/jcraggs/Box Sync/R_tutorials/Nicole_test1/MPA_2018_02_24.RData")
View(dat)
View(dat)
?diff
dat
ls
?ls
ls(dat)
knitr::opts_chunk$set(echo = TRUE)
library(readxl) # This is used to import data from excel
library(tidyverse)
library(here)
here()
dr_here(show_reason = TRUE)
data1 <- iris
dplyr::tbl_df(data1)
dplyr::glimpse(data1)
View(data1)
data1 %>%
group_by(Species) %>%
summarise(avg = mean(Sepal.Width)) %>%
arrange(avg)
dplyr::summarise(data1, avg = mean(Sepal.Length))
dplyr::summarise(data1, avg = mean(Sepal.Width))
dplyr::summarise_all(data1, funs(mean))
dplyr::count(data1, Species, wt=Sepal.Length)
dplyr::count(data1, Species)
dplyr::n_distinct_multi(data1, Species)
n_distinct
?n_distinct
dplyr::n_distinct(iris)
dplyr::n_distinct(iris (Species))
dplyr::n_distinct(iris.Species)
dplyr::n_distinct(iris {Species})
dplyr::n_distinct(iris [Species])
dplyr::n_distinct(iris$Species)
unique(iris$Species)
dplyr::n_distinct(iris$Species)
unique(iris$Species)
dplyr::n_distinct(data1$Species)
unique(data1$Species)
dplyr::n_distinct(data1$Species)
unique(data1$Species)
dplyr::n_distinct(data1$Species)
unique(data1$Species)
unique(data1$Species)
install.packages("Rmpi")
install.packages(c("Rmpi", "Rmpfr"))
install.packages(c("backports", "BDgraph", "BH", "brms", "broom", "callr", "carData", "checkmate", "class", "clipr", "coda", "codetools", "colorspace", "cowplot", "cubature", "curl", "data.table", "dbplyr", "deldir", "digest", "dplyr", "DT", "effects", "emmeans", "evaluate", "fansi", "future", "ggplot2", "ggpubr", "haven", "Hmisc", "htmlTable", "htmlwidgets", "httpuv", "httr", "imager", "jomo", "jsonlite", "knitr", "lattice", "lme4", "markdown", "MASS", "Matrix", "MCMCglmm", "mgcv", "mime", "mitml", "modelr", "nloptr", "openssl", "optparse", "packrat", "pbapply", "pillar", "pracma", "processx", "ps", "psych", "purrr", "qgraph", "quantreg", "R.rsp", "R6", "Rcpp", "RcppEigen", "readr", "readxl", "rio", "RJSONIO", "rlang", "rmarkdown", "Rmpfr", "RNifti", "rockchalk", "rsconnect", "rstan", "rstudioapi", "shiny", "shinythemes", "spData", "spdep", "StanHeaders", "statnet.common", "survey", "survival", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "xfun", "xts"))
install.packages("bibtex")
setwd("~/Box Sync/Grants/Alcohol_Pain/PsychoPy ASQ-Questionniares_Pilot Data")
source('~/Box Sync/Grants/Alcohol_Pain/PsychoPy ASQ-Questionniares_Pilot Data/PainAlc_Pilot Questionnaire Data_JGC.R', echo=TRUE)
setwd("~/Box Sync/Grants/Alcohol_Pain/PsychoPy ASQ-Questionniares_Pilot Data")
setwd("~/Box Sync/R01/DataAnalyses/MeredithRFiles")
dat.full <- read.csv("ImagingPsychometrics_DATA_2017-08-29_1040.csv", header = TRUE)
# import data:
# dat.full.may <- read.csv("ImagingPsychometrics_DATA_2017-05-25_1010.csv", header = TRUE)
# dat.full <- read.csv("ImagingPsychometrics_DATA_2017-08-29_1040.csv", header = TRUE)
dat.full <- read.csv("ImagingPsychometrics_DATA_2017-04-11_ASQ Scored.csv", header = TRUE)
install.packages(c("afex", "ape", "assertthat", "BDgraph", "brms", "Cairo", "callr", "caTools", "cli", "coin", "colorspace", "dplyr", "emmeans", "evaluate", "expm", "forcats", "fs", "future", "getopt", "ggpol", "ggsignif", "glue", "gmp", "gtable", "haven", "highr", "httpuv", "huge", "igraph", "jomo", "jtools", "knitr", "kutils", "later", "lazyeval", "lme4", "lmerTest", "loo", "maptools", "MASS", "Matrix", "MCMCglmm", "MEMSS", "mgcv", "mice", "mlmRev", "modelr", "mri", "multcomp", "mvtnorm", "network", "openssl", "optparse", "ordinal", "pkgbuild", "polynom", "processx", "purrr", "qgraph", "R.utils", "R6", "Rcpp", "RCurl", "readxl", "rlang", "rmarkdown", "rockchalk", "rpf", "rstudioapi", "spdep", "stringi", "stringr", "survival", "sys", "tibble", "tidyr", "tinytex", "xfun", "XML", "zip", "zoo"))
ls
pwd
dir()
path()
getwd
getwd()
# where files are:
# setwd("/Users/meredithjohnson/Box Sync/My Stuff/MyStuffForPainLab/Questionnaire Pilot Data")
setwd("/Users/jcraggs/Box Sync/Grants/Alcohol_Pain/PsychoPy ASQ-Questionniares_Pilot Data/")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(readxl) # This is used to import data from excel
library(tidyverse)
library(here)
here() # THIS SETS THE WORKING DIRECTORY TO THE LOCATION OF THIS FILE
dr_here(show_reason = TRUE)
install.packages(c("backports", "BDgraph", "broom", "cluster", "data.table", "ggplot2", "httpuv", "huge", "jtools", "MASS", "Matrix", "mgcv", "network", "nlme", "pracma", "rlang", "rpart", "rvest", "sandwich", "semPlot", "shiny", "spdep", "survival", "tinytex"))
>>>>>>> 81326334157beca6f730eb6c3117baf398f2e96f
